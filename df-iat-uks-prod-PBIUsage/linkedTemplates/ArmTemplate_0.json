{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-iat-uks-prod-PBIUsage"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"PowerBIUsageStore_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'PowerBIUsageStore'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-iat-uks-prod-umbraco.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db-iat-uks-prod-crmbi"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "WF81BE"
		},
		"LS_REST_Generic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/"
		},
		"LS_REST_Generic_properties_typeProperties_aadResourceId": {
			"type": "string",
			"defaultValue": "https://analysis.windows.net/powerbi/api"
		},
		"PowerBIUsageStore_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://saiatuksprodcrmbi.dfs.core.windows.net/"
		},
		"1amPBIUSAGEGrab_properties_PL_PowerBIGetActivityEventsToDatabase_parameters_DaysToExtract": {
			"type": "int",
			"defaultValue": 1
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SendEmail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SendEmail",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://ed409f9f-bf2d-44c8-a264-dc0fb7ce71b1.webhook.uks.azure-automation.net/webhooks?token=fve5cRjeqQ6wIcoN6fTmWYxdes7KzOs7HtJ0dTBKQ3g%3d",
							"body": {
								"value": "{\"toEmail\":\"justingreenwood@wakefield.gov.uk\",\"subject\":\"Pipeline Completed\",\"body\":\"<html><body><h1>Success</h1><p>Pipeline executed successfully.</p>\n,\"dataFactoryName\":\"@{pipeline().DataFactory}\",\"pipelineName\":\"@{pipeline().Pipeline}\",\n</body></html>\",\"isBodyHtml\":true}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_REST_Generic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_REST_Generic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "ManagedServiceIdentity",
					"aadResourceId": "[parameters('LS_REST_Generic_properties_typeProperties_aadResourceId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerBIUsageStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('PowerBIUsageStore_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('PowerBIUsageStore_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Generic_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PowerBIUsageStore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystem": {
						"type": "String"
					},
					"Folder": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystem",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PowerBIUsageStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_Generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "String"
					},
					"TableName": {
						"type": "String"
					},
					"DatabaseName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_PowerBI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_REST_Generic",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdminAPI": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().AdminAPI",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_REST_Generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_PowerBI1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_REST_Generic",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"AdminAPI": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().AdminAPI",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_REST_Generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PowerBIGetActivityEvents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extract Power BI Activity Events\n\nCreated by: Just Blindb√¶k",
				"activities": [
					{
						"name": "ForEach Day",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,pipeline().parameters.DaysToExtract)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Activity Events",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('activityevents?startDateTime=''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), 'T00:00:00.000Z''&endDateTime=''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), 'T23:59:59.999Z''')}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "ADF_PipelineRunId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_PipelineTriggerTime",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.continuationUri"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_REST_PowerBI",
											"type": "DatasetReference",
											"parameters": {
												"AdminAPI": {
													"value": "activityevents?startDateTime='@{formatDateTime(getPastTime(item(), 'Day'), 'yyyy-MM-dd')}T00:00:00.000Z'&endDateTime='@{formatDateTime(getPastTime(item(), 'Day'), 'yyyy-MM-dd')}T23:59:59.999Z'",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_Generic_JSON",
											"type": "DatasetReference",
											"parameters": {
												"FileSystem": {
													"value": "@pipeline().parameters.StorageAccountContainer",
													"type": "Expression"
												},
												"Folder": {
													"value": "@{pipeline().parameters.StorageAccountFolder}/activityevents/year=@{formatDateTime(getPastTime(item(), 'Day'), 'yyyy')}/month=@{formatDateTime(getPastTime(item(), 'Day'), 'MM')}",
													"type": "Expression"
												},
												"FileName": {
													"value": "powerbi_activityevents_@{formatDateTime(getPastTime(item(), 'Day'), 'yyyyMMdd')}.json",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DaysToExtract": {
						"type": "int",
						"defaultValue": 1
					},
					"StorageAccountContainer": {
						"type": "string",
						"defaultValue": "raw"
					},
					"StorageAccountFolder": {
						"type": "string",
						"defaultValue": "powerbi-tenant"
					}
				},
				"folder": {
					"name": "Power BI monitor"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-19T19:36:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_PowerBI')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Generic_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PowerBIGetActivityEventsToDatabase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extract Power BI Activity Events\n\nCreated by: Just Blindb√¶k",
				"activities": [
					{
						"name": "ForEach Day",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(1,pipeline().parameters.DaysToExtract)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Activity Events",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('activityevents?startDateTime=''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), 'T00:00:00.000Z''&endDateTime=''', formatDateTime(adddays(utcnow(), -7), 'yyyy-MM-dd'), 'T23:59:59.999Z''')}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "ADF_PipelineRunId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												{
													"name": "ADF_PipelineTriggerTime",
													"value": {
														"value": "@pipeline().TriggerTime",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.continuationUri"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['Id']"
													},
													"sink": {
														"name": "Id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RecordType']"
													},
													"sink": {
														"name": "RecordType",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['CreationTime']"
													},
													"sink": {
														"name": "CreationTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['Operation']"
													},
													"sink": {
														"name": "Operation",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['OrganizationId']"
													},
													"sink": {
														"name": "OrganizationId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UserType']"
													},
													"sink": {
														"name": "UserType",
														"type": "Int64"
													}
												},
												{
													"source": {
														"path": "[['UserKey']"
													},
													"sink": {
														"name": "UserKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Workload']"
													},
													"sink": {
														"name": "Workload",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UserId']"
													},
													"sink": {
														"name": "UserId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ClientIP']"
													},
													"sink": {
														"name": "ClientIP",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['UserAgent']"
													},
													"sink": {
														"name": "UserAgent",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Activity']"
													},
													"sink": {
														"name": "Activity",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ItemName']"
													},
													"sink": {
														"name": "ItemName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ObjectId']"
													},
													"sink": {
														"name": "ObjectId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RequestId']"
													},
													"sink": {
														"name": "RequestId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ActivityId']"
													},
													"sink": {
														"name": "ActivityId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['IsSuccess']"
													},
													"sink": {
														"name": "IsSuccess",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "[['WorkSpaceName']"
													},
													"sink": {
														"name": "WorkSpaceName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['WorkspaceId']"
													},
													"sink": {
														"name": "WorkspaceId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ImportId']"
													},
													"sink": {
														"name": "ImportId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ImportSource']"
													},
													"sink": {
														"name": "ImportSource",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ImportType']"
													},
													"sink": {
														"name": "ImportType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ImportDisplayName']"
													},
													"sink": {
														"name": "ImportDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DatasetName']"
													},
													"sink": {
														"name": "DatasetName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DatasetId']"
													},
													"sink": {
														"name": "DatasetId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['Datasets']"
													},
													"sink": {
														"name": "Datasets",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DataConnectivityMode']"
													},
													"sink": {
														"name": "DataConnectivityMode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GatewayId']"
													},
													"sink": {
														"name": "GatewayId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GatewayName']"
													},
													"sink": {
														"name": "GatewayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['GatewayType']"
													},
													"sink": {
														"name": "GatewayType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReportName']"
													},
													"sink": {
														"name": "ReportName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReportId']"
													},
													"sink": {
														"name": "ReportId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ReportType']"
													},
													"sink": {
														"name": "ReportType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FolderObjectId']"
													},
													"sink": {
														"name": "FolderObjectId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['FolderDisplayName']"
													},
													"sink": {
														"name": "FolderDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ArtifactName']"
													},
													"sink": {
														"name": "ArtifactName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ArtifactId']"
													},
													"sink": {
														"name": "ArtifactId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CapacityName']"
													},
													"sink": {
														"name": "CapacityName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CapacityUsers']"
													},
													"sink": {
														"name": "CapacityUsers",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['CapacityState']"
													},
													"sink": {
														"name": "CapacityState",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DistributionMethod']"
													},
													"sink": {
														"name": "DistributionMethod",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['ConsumptionMethod']"
													},
													"sink": {
														"name": "ConsumptionMethod",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RefreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AppName']"
													},
													"sink": {
														"name": "AppName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['AppReportId']"
													},
													"sink": {
														"name": "AppReportId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DashboardName']"
													},
													"sink": {
														"name": "DashboardName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DashboardId']"
													},
													"sink": {
														"name": "DashboardId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DataflowId']"
													},
													"sink": {
														"name": "DataflowId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DataflowName']"
													},
													"sink": {
														"name": "DataflowName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DataflowAccessTokenRequestParameters']"
													},
													"sink": {
														"name": "DataflowAccessTokenRequestParameters",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['DataflowType']"
													},
													"sink": {
														"name": "DataflowType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['EmbedTokenId']"
													},
													"sink": {
														"name": "EmbedTokenId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['RLSIdentities']"
													},
													"sink": {
														"name": "RLSIdentities",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ADF_PipelineRunId']"
													},
													"sink": {
														"name": "ADF_PipelineRunId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ADF_PipelineTriggerTime']"
													},
													"sink": {
														"name": "ADF_PipelineTriggerTime",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": "$['activityEventEntities']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DS_REST_PowerBI1",
											"type": "DatasetReference",
											"parameters": {
												"AdminAPI": {
													"value": "activityevents?startDateTime='@{formatDateTime(getPastTime(item(), 'Day'), 'yyyy-MM-dd')}T00:00:00.000Z'&endDateTime='@{formatDateTime(getPastTime(item(), 'Day'), 'yyyy-MM-dd')}T23:59:59.999Z'",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ASQL_Generic",
											"type": "DatasetReference",
											"parameters": {
												"SchemaName": "stgpowerbi",
												"TableName": "ActivityEvents",
												"DatabaseName": "DWH"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DaysToExtract": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "Power BI monitor"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-19T19:36:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_PowerBI1')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_Generic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1amPBIUSAGEGrab')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_PowerBIGetActivityEventsToDatabase",
							"type": "PipelineReference"
						},
						"parameters": {
							"DaysToExtract": "[parameters('1amPBIUSAGEGrab_properties_PL_PowerBIGetActivityEventsToDatabase_parameters_DaysToExtract')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-11-22T01:00:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_PowerBIGetActivityEventsToDatabase')]"
			]
		}
	]
}